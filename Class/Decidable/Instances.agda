module Class.Decidable.Instances where

open import Class.Prelude
open import Class.Decidable.Core
open import Class.DecEq.Core

instance
  Dec-โฅ : โฅ โ
  Dec-โฅ .dec = no ฮป()

  Dec-โค : โค โ
  Dec-โค .dec = yes tt

  open import Relation.Nullary.Decidable as D

  Dec-โ : โฆ A โ โฆ โ โฆ B โ โฆ โ (A โ B) โ
  Dec-โ .dec = dec D.โ-dec dec

  Dec-ร : โฆ A โ โฆ โ โฆ B โ โฆ โ (A ร B) โ
  Dec-ร .dec = dec D.ร-dec dec

  Dec-โ : โฆ A โ โฆ โ โฆ B โ โฆ โ (A โ B) โ
  Dec-โ .dec = dec D.โ-dec dec

  DecEqโDec : โฆ DecEq A โฆ โ _โก_ {A = A} โยฒ
  DecEqโDec .dec = _ โ _

  import Data.Bool as ๐น

  Dec-T : T โยน
  Dec-T .dec = ๐น.T? _

  import Data.List.Relation.Unary.All as L
  import Data.List.Relation.Unary.Any as L

  private variable n : โ; Pยน : Pred A โ; Pยฒ : Rel A โ

  Dec-All : โฆ Pยน โยน โฆ โ L.All Pยน โยน
  Dec-All .dec = L.all? decยน _

  Dec-Any : โฆ Pยน โยน โฆ โ L.Any Pยน โยน
  Dec-Any .dec = L.any? decยน _

  import Data.List.Relation.Unary.AllPairs as AP

  Dec-AllPairs : โฆ Pยฒ โยฒ โฆ โ AP.AllPairs Pยฒ โยน
  Dec-AllPairs .dec = AP.allPairs? decยฒ _

  open import Data.Vec as V
  open import Data.Vec.Relation.Unary.All as V
  open import Data.Vec.Relation.Unary.Any as V

  Dec-VAll : โฆ Pยน โยน โฆ โ V.All Pยน {n} โยน
  Dec-VAll .dec = V.all? decยน _

  Dec-VAny : โฆ Pยน โยน โฆ โ V.Any Pยน {n} โยน
  Dec-VAny .dec = V.any? decยน _

  import Data.Maybe as M
  import Data.Maybe.Relation.Unary.All as M renaming (dec to all?)
  import Data.Maybe.Relation.Unary.Any as M renaming (dec to any?)

  Dec-MAll : โฆ Pยน โยน โฆ โ M.All Pยน โยน
  Dec-MAll .dec = M.all? decยน _

  Dec-MAny : โฆ Pยน โยน โฆ โ M.Any Pยน โยน
  Dec-MAny .dec = M.any? decยน _
